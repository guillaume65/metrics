# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
   servers = ["mqtt:1883"]
   qos = 2
   topics = [
     "events/central_heating/otmonitor/boilerwatertemperature",
     "events/central_heating/otmonitor/returnwatertemperature",
     "events/central_heating/otmonitor/controlsetpoint",
     "events/central_heating/otmonitor/roomtemperature",
     "events/central_heating/otmonitor/modulation",
     "events/central_heating/otmonitor/chsetpoint",
     "events/central_heating/otmonitor/setpoint",
   ]
name_override = "OTV"
data_format = "value"
data_type = "float"
 
# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
   servers = ["mqtt:1883"]
   qos = 2
   topics = [
     "events/central_heating/otmonitor/flame",
     "events/central_heating/otmonitor/hotwater",
     "events/central_heating/otmonitor/centralheating",
     "events/central_heating/otmonitor/thermostat",
     "events/central_heating/otmonitor/chenable",
     "events/central_heating/otmonitor/dhwenable",
     "events/central_heating/otmonitor/fault",
   ]
name_override = "OTB"
data_format = "value"
data_type = "boolean"
 
# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
   servers = ["mqtt:1883"]
   qos = 2
   topics = [
     "events/central_heating/otmonitor/flame",
     "events/central_heating/otmonitor/hotwater",
     "events/central_heating/otmonitor/centralheating",
     "events/central_heating/otmonitor/thermostat",
     "events/central_heating/otmonitor/chenable",
     "events/central_heating/otmonitor/dhwenable",
     "events/central_heating/otmonitor/fault",
   ]
name_override = "OTI"
data_format = "value"
data_type = "integer"